#https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8
#是否开启数据源组件, 默认：true
spring.emily.datasource.enabled=true
#是否拦截超类或者接口中的方法，默认：true
spring.emily.datasource.check-inherited=true
#默认数据源配置，默认：default
spring.emily.datasource.default-config=mysql
#这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName
spring.emily.datasource.config.mysql.driver-class-name=com.mysql.cj.jdbc.Driver
#连接数据库的url，不同数据库不一样
spring.emily.datasource.config.mysql.url=jdbc:mysql://127.0.0.1:3306/sgrain?characterEncoding=utf-8&rewriteBatchedStatements=true
#连接数据库的用户名
spring.emily.datasource.config.mysql.username=root
#用户密码
spring.emily.datasource.config.mysql.password=smallgrain
#数据库连接池类型
spring.emily.datasource.config.mysql.db-type=com.alibaba.druid.pool.DruidDataSource
#物理超时时间，默认：-1
spring.emily.datasource.config.mysql.phy-timeout-millis=-1
#物理最大连接数，默认：-1（不建议配置）
spring.emily.datasource.config.mysql.phy-max-use-count=-1
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。默认：false
spring.emily.datasource.config.mysql.pool-prepared-statements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100，默认：-1
spring.emily.datasource.config.mysql.max-pool-prepared-statement-per-connection-size=-1

#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时，默认：0
spring.emily.datasource.config.mysql.initial-size=2
#最小连接池数，默认：0
spring.emily.datasource.config.mysql.min-idle=0
#最大连接数，默认：8
spring.emily.datasource.config.mysql.max-active=8
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁，默认：-1（推荐内网800ms,外网1200ms,因为tcp建立连接重试一般需要1s）
spring.emily.datasource.config.mysql.max-wait=800

#mysql默认使用ping模式,可以通过设置系统属性System.getProperties().setProperty("druid.mysql.usePingMethod", "false")更改为sql模式
#用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。默认：缺省
# mysql默认：SELECT 1  oracle默认：SELECT 'x' FROM DUAL
spring.emily.datasource.config.mysql.validation-query=SELECT 1
#单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法，默认：-1
spring.emily.datasource.config.mysql.validation-query-timeout=-1
#申请连接时执行validationQuery检测连接是否有效，这个配置会降低性能。默认：false (如果test-on-borrow为true,那么test-while-idle无效)
spring.emily.datasource.config.mysql.test-on-borrow=false
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。默认：true
spring.emily.datasource.config.mysql.test-while-idle=true
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认：false
spring.emily.datasource.config.mysql.test-on-return=false

#是否对空闲连接进行保活，默认：false
spring.emily.datasource.config.mysql.keep-alive=true
#触发心跳的间隔时间（Destory线程检测连接的间隔时间），默认：60*1000 一分钟
spring.emily.datasource.config.mysql.time-between-eviction-runs-millis=60000
#连接保持空闲而不被驱逐的最小时间（保活心跳只会对存货时间超过这个值的连接进行），默认：1000L * 60L * 30L
spring.emily.datasource.config.mysql.min-evictable-idle-time-millis=1800000
#连接保持空闲最长时间（连接有任何操作，计时器重置，否则被驱逐），默认：1000L * 60L * 60L * 7
spring.emily.datasource.config.mysql.max-evictable-idle-time-millis=25200000
#保活检查间隔时间，默认：60*1000*2毫秒，要求大于等于2分钟（要大于min-evictable-idle-time-millis）
spring.emily.datasource.config.mysql.keep-alive-between-time-millis=120000

#如果一个连接持有超过指定时间还没有归还，就被认为是异常连接，防止互锁
spring.emily.datasource.config.mysql.remove-abandoned=false
#默认：300*1000
spring.emily.datasource.config.mysql.remove-abandoned-timeout-millis=300000
#回收连接时打印日志，默认：false
spring.emily.datasource.config.mysql.log-abandoned=false


spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.session-stat-enable=true
spring.datasource.druid.web-stat-filter.session-stat-max-count=10000
spring.datasource.druid.web-stat-filter.principal-cookie-name=emily
spring.datasource.druid.web-stat-filter.principal-session-name=emily
spring.datasource.druid.web-stat-filter.profile-enable=true
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.config.enabled=true
spring.datasource.druid.aop-patterns=com.emily.infrastructure.test.*

#是否开启mybatis拦截组件, 默认：true
spring.emily.mybatis.enabled=true
#是否拦截超类或者接口中的方法，默认：true
spring.emily.mybatis.check-class-inherited=true
